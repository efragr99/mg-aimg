import { NextResponse } from 'next/server'
import OpenAI from 'openai'
import db from '@/base/import_base'
import  {filtrarBase}   from '@/app/utils/filtrarbase'
import { franc } from 'franc-min'
import langs from 'langs'
import { analizarConIA } from '@/app/utils/analizar_ia'



const openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY })

export async function POST(req: Request) {
  const body = await req.json()

   // üîí Validaci√≥n de campos obligatorios (excepto diagn√≥stico)
  if (!body.sintomas || !body.antecedentes || !body.sexo || !body.lateralidad) {
    return new Response(
      JSON.stringify({ error: 'Faltan campos obligatorios: s√≠ntomas, antecedentes, sexo o lateralidad.' }),
      { status: 400 }
    )
  }

   // üß† Preparar texto completo desde los datos
  const sintomas = Array.isArray(body.sintomas) ? body.sintomas.join('') : body.sintomas.trim()
  const antecedentes = Array.isArray(body.antecedentes)
      ?body.antecedentes.join('')
      :(body.antecedentes?.trim() || '')
  const diagnostico = Array.isArray(body.diagnostico)
  ? body.diagnostico.join(' ')
  : (body.diagnostico?.trim() || '')

  const sexo = (body.sexo || '').trim ()
  const lateralidad = (body.lateralidad || '').trim()

  const textoSintomas = `
  ‚ö†Ô∏è Analiza √∫nicamente los s√≠ntomas actuales como base de diagn√≥stico.
  Los antecedentes m√©dicos solo deben considerarse si afectan directamente los s√≠ntomas actuales.
  No pueden influir en el resultado si no tienen conexi√≥n cl√≠nica con lo que el paciente experimenta ahora.

  S√≠ntomas actuales: ${sintomas}
  Antecedentes m√©dicos relevantes (contexto): ${antecedentes}
  ${diagnostico ? `Diagn√≥stico cl√≠nico actual (si aplica): ${diagnostico}` : ''}
  Sexo del paciente: ${sexo}
  Lateralidad biol√≥gica (diestro o zurdo): ${lateralidad}
`.trim()

  // üåç Detecci√≥n de idioma autom√°tica
  let lang = 'es'
  const supportedLangs = ['en', 'es', 'pt', 'it', 'de', 'fr', 'ru']

  try {
    if (body.idioma && supportedLangs.includes(body.idioma)) {
      lang = body.idioma
    } else {
      const langCode = franc(`${sintomas} ${antecedentes} ${diagnostico}`)
      const language = langs.where('3', langCode)
      if (language && supportedLangs.includes(language['1'])) {
        lang = language['1']
      }
    }
  } catch (err) {
    console.warn('Error detectando idioma:', err)
  }
const base = db(lang)  // carga la base seg√∫n el idioma
if (!base) {
  return NextResponse.json({ error: 'Base no encontrada para el idioma seleccionado' }, { status: 500 })
}
 // Filtro de la base
const conflictos = filtrarBase(textoSintomas, lang, base, sexo)

if (conflictos.length === 0) {
  const resultadoIA = await analizarConIA(sintomas, lang)
  return NextResponse.json(resultadoIA)
}
 // üß† A√±adir conflictos extra si hay muy pocos resultados
  if (conflictos.length < 4) {
    const palabras: string[] = sintomas
      .toLowerCase()
      .split(/\W+/)
      .filter((w: string): boolean => w.length > 3)

    const extras = base
      .filter((c: any): boolean => {
        const texto = JSON.stringify(c).toLowerCase()
        return palabras.some((p: string): boolean => texto.includes(p))
      })
      .slice(0, 3)

    // Evitar duplicados
    const idsExistentes = new Set(conflictos.map(c => c.ID))
    extras.forEach(e => {
      if (!idsExistentes.has(e.ID)) {
        conflictos.push(e)
      }
    })
  }
const resumenConflictos = conflictos.map((c) => {
  if (lang === 'en') {
    return {
      ID: c.ID,
      "Organ or System": c["Organ or System"],
      "Biological Conflict": c["Biological Conflict"],
      "Embryonic tissue": c["Embryonic tissue"],
      "Active phase and symptoms": c["Active phase and symptoms"]?.substring(0, 300),
      "Healing phase and symptoms": c["Healing phase and symptoms"]?.substring(0, 300)
    }
  }

  // Default espa√±ol
  return {
    ID: c.ID,
    "√ìrgano o Sistema": c["√ìrgano o Sistema"],
    "Conflicto Biol√≥gico": c["Conflicto Biol√≥gico"],
    "Tejido embrionario": c["Tejido embrionario"],
    "Fase activa y s√≠ntomas": c["Fase activa y s√≠ntomas"]?.substring(0, 300),
    "Fase de resoluci√≥n y s√≠ntomas": c["Fase de resoluci√≥n y s√≠ntomas"]?.substring(0, 300)
  }
})

const disclaimer: string = {
    es: "‚ö†Ô∏è Este an√°lisis tiene fines exclusivamente educativos y se basa en el enfoque cl√≠nico de la Medicina Germ√°nica (5 Leyes Biol√≥gicas). No reemplaza el diagn√≥stico, tratamiento ni seguimiento m√©dico convencional. Ante cualquier s√≠ntoma grave o duda, se recomienda consultar a su m√©dico de confianza.",
    en: "‚ö†Ô∏è This analysis is for educational purposes only and based on the clinical framework of Germanic Medicine (5 Biological Laws). It does not replace conventional medical diagnosis, treatment, or follow-up. If you experience serious symptoms or doubts, please consult a trusted physician."
  }[lang] || "‚ö†Ô∏è Este an√°lisis tiene fines exclusivamente educativos y se basa en el enfoque cl√≠nico de la Medicina Germ√°nica (5 Leyes Biol√≥gicas). No reemplaza el diagn√≥stico, tratamiento ni seguimiento m√©dico convencional. Ante cualquier s√≠ntoma grave o duda, se recomienda consultar a su m√©dico de confianza."


// üßæ Prompt principal
const prompts_anlz:Record<string, string> = {
es:
`Eres una inteligencia especializada en Medicina Germ√°nica (5 Leyes Biol√≥gicas). Tu tarea es analizar los s√≠ntomas proporcionados por el usuario, y determinar el o los conflictos biol√≥gicos m√°s coherentes bas√°ndote exclusivamente en los siguientes datos cl√≠nicos filtrados:

${JSON.stringify(resumenConflictos.slice(0,10))}

No puedes usar ning√∫n conflicto fuera de esta lista. Si los s√≠ntomas no coinciden claramente con ninguno, responde con tipo = "opciones" y sugiere los m√°s cercanos de la lista.

Analiza el conjunto de s√≠ntomas como un todo. Detecta si est√°n en:
- Fase activa (CA)
- Crisis epileptoide (CE)
- Fase de soluci√≥n (PCL-A / PCL-B)

Responde solo en el idioma detectado en los s√≠ntomas.
--- DATOS DEL PACIENTE ---
${textoSintomas}

--- BASE DE DATOS DE MEDICINA GERM√ÅNICA ---
${JSON.stringify(base).slice(0, 15000)}...

--- FORMATO ESPERADO ---
Si ning√∫n conflicto se ajusta claramente a todos los s√≠ntomas ‚Äî 
especialmente si la combinaci√≥n de s√≠ntomas involucra sistemas diferentes (como respiratorio y urinario) ‚Äî DEBES responder con el formato "tipo": "opciones".
solo puedes responder con el formato "opciones" y debes incluir conflictos del sistema urinario como ri√±ones, ur√©teres o vejiga.
Si hay una coincidencia clara:
{
  "tipo": "unico",
  "conflicto_biologico": "Explicaci√≥n clara y razonada del conflicto",
  "organo_tejido": "√ìrgano o tejido involucrado",
  "tejido_embrionario": "Tejido embrionario involucrado, seg√∫n base de datos",
  "fase_activa": "Descripci√≥n detallada de la fase activa",
  "crisis_epileptoide": "Qu√© ocurre durante la crisis CE",
  "fase_resolucion": "Qu√© pasa en PCL-A y PCL-B",
  "consejos": ["Consejo 1", "Consejo 2", "Consejo 3"],
  "sugerencia_examenes": "Opcional. Solo si realmente es necesario, sugiere ex√°menes con lenguaje emp√°tico."
}

Si hay m√∫ltiples conflictos posibles:
{
  "tipo": "opciones",
  "opciones": [
    {
      "conflicto": "Nombre del conflicto",
      "organo_tejido": "√ìrgano o tejido involucrado",
      "tejido_embrionario": "Tejido embrionario",
      "contexto_social": ["Situaciones comunes que activan el conflicto"],
      "tipos_personalidad": ["Perfiles m√°s vulnerables"]
    },
    ...
  ]
}
‚ö†Ô∏è Si hay alg√∫n s√≠ntoma que incluya: orina turbia, ardor al orinar, infecci√≥n urinaria, micci√≥n dolorosa o alteraciones renales,
debes incluir al menos 1 conflicto urinario (ri√±√≥n, pelvis renal, ur√©teres, vejiga) en las opciones obligatoriamente.
‚ö†Ô∏è Si los s√≠ntomas son vagos, internos, ambiguos o no permiten identificar una causa √∫nica clara, debes incluir al menos 3-4 opciones razonadas de diferentes tejidos o sistemas, no solo una o dos.
‚ö†Ô∏è Solo analiza los conflictos listados. No menciones otros.
‚ö†Ô∏è IMPORTANTE: Tu respuesta debe ser un JSON limpio, sin markdown, sin emojis, sin explicaciones afuera. SOLO el objeto JSON.
`,
en:
`
You are an AI specialized in Germanic Medicine (5 Biological Laws). Your task is to analyze the symptoms provided by the user and determine the most biologically coherent conflict(s) based strictly on the following filtered clinical data:

${JSON.stringify(resumenConflictos.slice(0,10))}

You may NOT use any conflict outside this list. If the symptoms do not clearly match any conflict, respond with "type": "options" and suggest the closest possible ones from the list.

Analyze the full symptom context holistically. Detect whether the user is in:
- Active phase (CA)
- Epileptoid crisis (CE)
- Healing phase (PCL-A / PCL-B)

Respond only in the language detected from the symptoms.
--- PATIENT DATA ---
${textoSintomas}

--- GERMANIC MEDICINE DATABASE ---
${JSON.stringify(base).slice(0, 15000)}...

--- EXPECTED FORMAT ---
If none of the conflicts clearly match all the symptoms ‚Äî especially if the symptom combination involves different systems (e.g., respiratory and urinary) ‚Äî you MUST respond using the "tipo": "opciones" format.
If there is a clear match:
{
  "tipo": "single",
  "conflicto_biologico": "Clear and reasoned explanation of the conflict",
  "organo_tejido": "Organ or tissue involved",
  "tejido_embrionario": "Embryonic tissue involved, according to the database",
  "fase_activa": "Detailed description of the active phase",
  "crisis_epileptoide": "What happens during the epileptoid crisis",
  "fase_resolucion": "What happens in PCL-A and PCL-B",
  "consejos": ["Tip 1", "Tip 2", "Tip 3"],
  "sugerencia_examenes": "Optional. Only if truly necessary, suggest exams using empathetic language."
}
If there are multiple possible conflicts:
{
  "tipo":"options": [
    {
      "conflicto": "Conflict name",
      "organo_tejido": "Organ or tissue involved",
      "tejido_embrionario": "Embryonic tissue",
      "contexto_social": ["Common situations that trigger the conflict"],
      "tipos_personalidad": ["Most vulnerable personality profiles"]
    }
  ]
}
  ‚ö†Ô∏è IMPORTANT:
If any symptom includes: **cloudy urine**, **burning when urinating**, **urinary infection**, **kidney pain**, or other urinary signs, 
you MUST include at least **one urinary system conflict** (e.g., kidney, renal pelvis, ureters, bladder) in the options ‚Äî even if not among the top matches.
‚ö†Ô∏è If the symptoms are vague, internal, or ambiguous and do not clearly point to a unique cause, you MUST include at least 3‚Äì4 reasonable options from different tissues or systems ‚Äî not just one or two.
‚ö†Ô∏è IMPORTANT: Your response must be clean JSON, with no markdown, no emojis, and no external explanations. ONLY the JSON object.
`,
de:
`
Deine Antwort muss vollst√§ndig in professionellem, klarem und nat√ºrlichem Deutsch verfasst sein. Verwende keine andere Sprache.

Handle als professioneller Therapeut der Germanischen Heilkunde. Du hast Zugriff auf eine strukturierte Datenbank biologischer Konflikte.

Analysiere die Symptome, das Geschlecht, das Alter und den sozialen Kontext des Patienten, um den wahrscheinlichsten Konflikt bzw. die wahrscheinlichsten Konflikte gem√§√ü der biologischen Logik zu bestimmen.

Wenn mehrere Konflikte mit √§hnlichen Symptomen m√∂glich sind, biete bis zu 4 klar unterscheidbare Optionen zur Auswahl an.

Wenn es eine klare √úbereinstimmung gibt, erkl√§re diesen Konflikt im Detail.

Wenn die Symptome zu allgemein sind, erstelle Auswahloptionen f√ºr den Benutzer.

Erfinde niemals Informationen und sage nicht "Gewebe nicht spezifiziert". Wenn die Information nicht in der Datenbank vorhanden ist, schreibe: "Nicht in dieser Datenbank registriert."


--- PATIENTENDATEN ---
${JSON.stringify(body)}

--- DATENBANK DER GERMANISCHEN HEILKUNDE ---
${JSON.stringify(base).slice(0, 15000)}...

--- ERWARTETES FORMAT ---
Bei eindeutiger √úbereinstimmung:
{
  "tipo": "einzeln",
  "conflicto_biologico": "Klare und begr√ºndete Erkl√§rung des Konflikts",
  "organo_tejido": "Betroffenes Organ oder Gewebe",
  "tejido_embrionario": "Beteiligtes embryonales Gewebe laut Datenbank",
  "fase_activa": "Detaillierte Beschreibung der aktiven Phase",
  "crisis_epileptoide": "Was w√§hrend der epileptoiden Krise geschieht",
  "fase_resolucion": "Was in PCL-A und PCL-B geschieht",
  "consejos": ["Tipp 1", "Tipp 2", "Tipp 3"],
  "sugerencia_examenes": "Optional. Nur wenn wirklich n√∂tig, empfehle Untersuchungen mit einf√ºhlsamer Sprache."
}

Bei mehreren m√∂glichen Konflikten:
{
  "tipo": "optionen": [
    {
      "conflicto": "Name des Konflikts",
      "organo_tejido": "Betroffenes Organ oder Gewebe",
      "tejido_embrionario": "Embryonales Gewebe",
      "contexto_social": ["H√§ufige Situationen, die den Konflikt ausl√∂sen"],
      "tipos_personalidad": ["Besonders gef√§hrdete Pers√∂nlichkeitsprofile"]
    }
  ]
}
‚ö†Ô∏è IMPORTANT : Ta r√©ponse doit √™tre un JSON propre, sans markdown, sans emojis, sans explication externe. UNIQUEMENT l'objet JSON.
`,
it: 
`
La tua risposta deve essere scritta completamente in italiano professionale, chiaro e naturale. Non usare nessun'altra lingua.

Agisci come un terapeuta professionista di Medicina Germanica. Hai accesso a un database strutturato con conflitti biologici.

Analizza i sintomi, il sesso, l‚Äôet√† e il contesto sociale del paziente per determinare quali conflitti siano pi√π probabili secondo la logica biologica.

Se ci sono diversi conflitti possibili con sintomi simili, proponi fino a 4 opzioni chiaramente distinte per far scegliere l‚Äôutente.

Se c‚Äô√® una corrispondenza chiara, spiega in dettaglio quel conflitto.

Se i sintomi sono troppo generici, genera opzioni selezionabili.

Non inventare mai informazioni e non dire "tessuto non specificato". Se il dato manca, scrivi: "Non registrato in questo database."



--- DATI DEL PAZIENTE ---
${JSON.stringify(body)}

--- DATABASE DI MEDICINA GERMANICA ---
${JSON.stringify(base).slice(0, 15000)}...

--- FORMATO ATTESO ---
Se c‚Äô√® una corrispondenza chiara:
{
  "tipo": "singolo",
  "conflicto_biologico": "Spiegazione chiara e ragionata del conflitto",
  "organo_tejido": "Organo o tessuto coinvolto",
  "tejido_embrionario": "Tessuto embrionale coinvolto, secondo il database",
  "fase_activa": "Descrizione dettagliata della fase attiva",
  "crisis_epileptoide": "Cosa accade durante la crisi epileptoide",
  "fase_resolucion": "Cosa succede in PCL-A e PCL-B",
  "consejos": ["Consiglio 1", "Consiglio 2", "Consiglio 3"],
  "sugerencia_examenes": "Opzionale. Solo se necessario, suggerisci esami con linguaggio empatico."
}
Se ci sono pi√π conflitti possibili:
{
  "tipo": "opzioni": [
    {
      "conflicto": "Nome del conflitto",
      "organo_tejido": "Organo o tessuto coinvolto",
      "tejido_embrionario": "Tessuto embrionale",
      "contexto_social": ["Situazioni comuni che attivano il conflitto"],
      "tipos_personalidad": ["Profili di personalit√† pi√π vulnerabili"]
    }
  ]
}
‚ö†Ô∏è IMPORTANTE: La tua risposta deve essere un JSON pulito, senza markdown, senza emoji, senza spiegazioni. SOLO l‚Äôoggetto JSON.
`,
pt:
`
Sua resposta deve ser completamente escrita em portugu√™s profissional, claro e natural. N√£o use nenhum outro idioma.

Atue como um terapeuta profissional de Medicina Germ√¢nica. Voc√™ tem acesso a um banco de dados estruturado com conflitos biol√≥gicos.

Analise os sintomas, sexo, idade e contexto social do paciente para determinar quais conflitos s√£o mais prov√°veis segundo a l√≥gica biol√≥gica.

Se houver v√°rios conflitos poss√≠veis com sintomas semelhantes, ofere√ßa at√© 4 op√ß√µes bem diferenciadas para o usu√°rio escolher.

Se houver uma correspond√™ncia clara, explique esse conflito em detalhes.

Se os sintomas forem muito gen√©ricos, gere op√ß√µes para o usu√°rio escolher.

Nunca invente informa√ß√µes nem diga "tecido n√£o especificado". Se o dado n√£o estiver na base, diga: "N√£o registrado neste banco de dados."



--- DADOS DO PACIENTE ---
${JSON.stringify(body)}

--- BANCO DE DADOS DE MEDICINA GERM√ÇNICA ---
${JSON.stringify(base).slice(0, 15000)}...

--- FORMATO ESPERADO ---
Se houver uma correspond√™ncia clara:
{
  "tipo": "√∫nico",
  "conflicto_biologico": "Explica√ß√£o clara e fundamentada do conflito",
  "organo_tejido": "√ìrg√£o ou tecido envolvido",
  "tejido_embrionario": "Tecido embrion√°rio envolvido, segundo o banco de dados",
  "fase_activa": "Descri√ß√£o detalhada da fase ativa",
  "crisis_epileptoide": "O que ocorre durante a crise epileptoide",
  "fase_resolucion": "O que acontece nas fases PCL-A e PCL-B",
  "consejos": ["Conselho 1", "Conselho 2", "Conselho 3"],
  "sugerencia_examenes": "Opcional. Somente se necess√°rio, sugerir exames com linguagem emp√°tica."
}
Se houver m√∫ltiplos conflitos poss√≠veis:
{
  "tipo": "op√ß√µes": [
    {
      "conflicto": "Nome do conflito",
      "organo_tejido": "√ìrg√£o ou tecido envolvido",
      "tejido_embrionario": "Tecido embrion√°rio",
      "contexto_social": ["Situa√ß√µes comuns que ativam o conflito"],
      "tipos_personalidad": ["Perfis de personalidade mais vulner√°veis"]
    }
  ]
}
‚ö†Ô∏è IMPORTANTE: Sua resposta deve ser um JSON limpo, sem markdown, sem emojis, sem explica√ß√µes externas. SOMENTE o objeto JSON.
`,
fr:
`
Ta r√©ponse doit √™tre enti√®rement r√©dig√©e en fran√ßais professionnel, clair et naturel. N'utilise aucune autre langue.

Agis comme un th√©rapeute professionnel en M√©decine Germanique. Tu as acc√®s √† une base de donn√©es structur√©e de conflits biologiques.

Analyse les sympt√¥mes, le sexe, l‚Äô√¢ge et le contexte social du patient pour identifier les conflits les plus probables selon la logique biologique.

S‚Äôil existe plusieurs conflits possibles aux sympt√¥mes similaires, propose jusqu‚Äô√† 4 options bien diff√©renci√©es pour que l‚Äôutilisateur choisisse.

S‚Äôil y a une correspondance claire, explique ce conflit en d√©tail.

Si les sympt√¥mes sont trop g√©n√©raux, g√©n√®re plusieurs options √† choisir.

Ne jamais inventer d'information ni dire "tissu non sp√©cifi√©". Si la donn√©e est absente, indique : "Non enregistr√© dans cette base de donn√©es."



--- DONN√âES DU PATIENT ---
${JSON.stringify(body)}

--- BASE DE DONN√âES DE M√âDECINE GERMANIQUE ---
${JSON.stringify(base).slice(0, 15000)}...

--- FORMAT ATTENDU ---
En cas de correspondance claire :
{
  "tipo": "unique",
  "conflicto_biologico": "Explication claire et raisonn√©e du conflit",
  "organo_tejido": "Organe ou tissu concern√©",
  "tejido_embrionario": "Tissu embryonnaire impliqu√©, selon la base de donn√©es",
  "fase_activa": "Description d√©taill√©e de la phase active",
  "crisis_epileptoide": "Ce qui se passe pendant la crise √©pilepto√Øde",
  "fase_resolucion": "Ce qui se passe en PCL-A et PCL-B",
  "consejos": ["Conseil 1", "Conseil 2", "Conseil 3"],
  "sugerencia_examenes": "Optionnel. Sugg√®re des examens si n√©cessaire, avec un langage empathique."
}
En cas de conflits multiples :
{
  "tipo": "options": [
    {
      "conflicto": "Nom du conflit",
      "organo_tejido": "Organe ou tissu concern√©",
      "tejido_embrionario": "Tissu embryonnaire",
      "contexto_social": ["Situations courantes d√©clenchant le conflit"],
      "tipos_personalidad": ["Profils de personnalit√© les plus vuln√©rables"]
    }
  ]
}
‚ö†Ô∏è IMPORTANTE: La tua risposta deve essere un JSON pulito, senza markdown, senza emoji, senza spiegazioni. SOLO l‚Äôoggetto JSON.
`,
ru:
`
–¢–≤–æ–π –æ—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–ª–Ω–æ—Å—Ç—å—é –Ω–∞–ø–∏—Å–∞–Ω –Ω–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–º, —è—Å–Ω–æ–º –∏ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–º —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ. –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π –¥—Ä—É–≥–∏–µ —è–∑—ã–∫–∏.

–î–µ–π—Å—Ç–≤—É–π –∫–∞–∫ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Ä–∞–ø–µ–≤—Ç –ì–µ—Ä–º–∞–Ω—Å–∫–æ–π –º–µ–¥–∏—Ü–∏–Ω—ã. –£ —Ç–µ–±—è –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –±–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤.

–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Å–∏–º–ø—Ç–æ–º—ã, –ø–æ–ª, –≤–æ–∑—Ä–∞—Å—Ç –∏ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø–∞—Ü–∏–µ–Ω—Ç–∞, —á—Ç–æ–±—ã –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –Ω–∞–∏–±–æ–ª–µ–µ –≤–µ—Ä–æ—è—Ç–Ω—ã–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –±–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π –ª–æ–≥–∏–∫–∏.

–ï—Å–ª–∏ –µ—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ —Å –ø–æ—Ö–æ–∂–∏–º–∏ —Å–∏–º–ø—Ç–æ–º–∞–º–∏, –ø—Ä–µ–¥–ª–æ–∂–∏ –¥–æ 4 —á—ë—Ç–∫–æ —Ä–∞–∑–ª–∏—á–∞—é—â–∏—Ö—Å—è –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª.

–ï—Å–ª–∏ –µ—Å—Ç—å –æ–¥–Ω–æ–∑–Ω–∞—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ, –ø–æ–¥—Ä–æ–±–Ω–æ –æ–±—ä—è—Å–Ω–∏ —ç—Ç–æ—Ç –∫–æ–Ω—Ñ–ª–∏–∫—Ç.

–ï—Å–ª–∏ —Å–∏–º–ø—Ç–æ–º—ã —Å–ª–∏—à–∫–æ–º –æ–±—â–∏–µ, —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–π –Ω–∞–±–æ—Ä –≤–æ–∑–º–æ–∂–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –¥–ª—è –≤—ã–±–æ—Ä–∞.

–ù–∏–∫–æ–≥–¥–∞ –Ω–µ –≤—ã–¥—É–º—ã–≤–∞–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ –Ω–µ –≥–æ–≤–æ—Ä–∏ "—Ç–∫–∞–Ω—å –Ω–µ —É–∫–∞–∑–∞–Ω–∞". –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç, –Ω–∞–ø–∏—à–∏: "–ù–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ –≤ —ç—Ç–æ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö."


--- –î–ê–ù–ù–´–ï –ü–ê–¶–ò–ï–ù–¢–ê ---
${JSON.stringify(body)}

--- –ë–ê–ó–ê –î–ê–ù–ù–´–• –ì–ï–†–ú–ê–ù–°–ö–û–ô –ú–ï–î–ò–¶–ò–ù–´ ---
${JSON.stringify(base).slice(0, 15000)}...

--- –û–ñ–ò–î–ê–ï–ú–´–ô –§–û–†–ú–ê–¢ ---
–ï—Å–ª–∏ –µ—Å—Ç—å —á—ë—Ç–∫–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ:
{
  "tipo": "–æ–¥–∏–Ω",
  "conflicto_biologico": "–ß–µ—Ç–∫–æ–µ –∏ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–Ω–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞",
  "organo_tejido": "–ó–∞–¥–µ–π—Å—Ç–≤–æ–≤–∞–Ω–Ω—ã–π –æ—Ä–≥–∞–Ω –∏–ª–∏ —Ç–∫–∞–Ω—å",
  "tejido_embrionario": "–ó–∞–¥–µ–π—Å—Ç–≤–æ–≤–∞–Ω–Ω–∞—è —ç–º–±—Ä–∏–æ–Ω–∞–ª—å–Ω–∞—è —Ç–∫–∞–Ω—å (–ø–æ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö)",
  "fase_activa": "–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–π —Ñ–∞–∑—ã",
  "crisis_epileptoide": "–ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤–æ –≤—Ä–µ–º—è —ç–ø–∏–ª–µ–ø—Ç–æ–∏–¥–Ω–æ–≥–æ –∫—Ä–∏–∑–∞",
  "fase_resolucion": "–ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ —Ñ–∞–∑–∞—Ö PCL-A –∏ PCL-B",
  "consejos": ["–°–æ–≤–µ—Ç 1", "–°–æ–≤–µ—Ç 2", "–°–æ–≤–µ—Ç 3"],
  "sugerencia_examenes": "–û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ. –¢–æ–ª—å–∫–æ –µ—Å–ª–∏ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ, –ø—Ä–µ–¥–ª–æ–∂–∏ –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è —Å —Å–æ—á—É–≤—Å—Ç–≤–µ–Ω–Ω—ã–º —Ç–æ–Ω–æ–º."
}
–ï—Å–ª–∏ –µ—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤:
{
  "tipo": "–≤–∞—Ä–∏–∞–Ω—Ç—ã": [
    {
      "conflicto": "–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞",
      "organo_tejido": "–û—Ä–≥–∞–Ω –∏–ª–∏ —Ç–∫–∞–Ω—å",
      "tejido_embrionario": "–≠–º–±—Ä–∏–æ–Ω–∞–ª—å–Ω–∞—è —Ç–∫–∞–Ω—å",
      "contexto_social": ["–¢–∏–ø–∏—á–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏, –≤—ã–∑—ã–≤–∞—é—â–∏–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç"],
      "tipos_personalidad": ["–ù–∞–∏–±–æ–ª–µ–µ —É—è–∑–≤–∏–º—ã–µ —Ç–∏–ø—ã –ª–∏—á–Ω–æ—Å—Ç–∏"]
    }
  ]
}
‚ö†Ô∏è –í–ê–ñ–ù–û: –û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ –≤–∏–¥–µ —á–∏—Å—Ç–æ–≥–æ JSON-–æ–±—ä–µ–∫—Ç–∞, –±–µ–∑ markdown, –±–µ–∑ —ç–º–æ–¥–∑–∏, –±–µ–∑ –ø–æ—è—Å–Ω–µ–Ω–∏–π. –¢–û–õ–¨–ö–û JSON-–æ–±—ä–µ–∫—Ç.
`
}  

  const prompt = prompts_anlz[lang] || prompts_anlz['es']
  const completion = await openai.chat.completions.create({
    model: 'gpt-4-turbo',
    messages: [{ role: 'user', content: prompt}],
    temperature: 0.7
  })

  const raw = completion.choices[0].message.content

  // üëÅÔ∏è Para depurar si falla
  console.log('IDIOMA DETECTADO FINAL:', lang)
  console.log('PROMPT ENVIADO (inicio):', prompt.slice(0, 300))
  console.log('Respuesta IA:', raw)
  console.log("Conflictos seleccionados:", conflictos.map(c => c["√ìrgano o Sistema"]));
  console.log("Usando IA para analizar s√≠ntomas directamente...", analizarConIA)
  
  try {
  const rawClean = raw!.replace(/```json|```/g, '').trim()
const json = JSON.parse(rawClean)
  console.log('üí° IA detect√≥ opciones:', json)
  return NextResponse.json(json)
} catch (err) {
  console.error('‚ùå Error parseando respuesta IA:', err)
  const resultadosIA = await analizarConIA(sintomas, lang)
  if (resultadosIA) {
    console.warn('üîÑ Usando fallback de analizarConIA por fallo de parseo.')
    return NextResponse.json(resultadosIA)
  }
  return NextResponse.json({ error: 'Respuesta no v√°lida de la IA', raw })
}
}

